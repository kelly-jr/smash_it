const WEATHER_API_KEY="f47ae49c55b6fb4c7da781cd3ebd92a8",OPENCAGE_API_KEY="77fb67b4922c4cb1ae1b56d22b65abeb",WEATHER_URL=`https://api.openweathermap.org/data/2.5/onecall?appid=${WEATHER_API_KEY}&units=metric`,CURRENT_WEATHER_URL=`https://api.openweathermap.org/data/2.5/weather?appid=${WEATHER_API_KEY}&units=metric`,OPENCAGE_URL=`https://api.opencagedata.com/geocode/v1/json?key=${OPENCAGE_API_KEY}&q=`;var MY_LOCATION={lat:-1.3025068,lng:36.5672108},home=document.getElementById("home");const days=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var getJSON=({url:e,callback:t,options:a})=>{a=a||{mode:"cors"},fetch(e,a).then(status).then(json).then(function(e){t(e)}).catch(function(e){console.log("Request failed",e)})};function getJSONData(e,t){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="json",a.onload=function(){var e=a.status;t(200===e?null:e,a.response)},a.send()}var getLocation=()=>{let e=MY_LOCATION;localStorage.getItem("home")&&(e=JSON.parse(localStorage.getItem("home"))),getWeatherData({...e})};function status(e){return e.status>=200&&e.status<300?Promise.resolve(e):Promise.reject(new Error(e.statusText))}function json(e){return e.json()}function updateValue(e,t){document.querySelector(e).innerHTML=t}function clearChildElement(e){document.querySelector(e).innerHTML=""}function addChildElement(e,t){document.querySelector(e).innerHTML+=t}function objectsAreEquivalent(e,t){if(!e||!t)return!1;var a=Object.getOwnPropertyNames(e),n=Object.getOwnPropertyNames(t);if(a.length!=n.length)return!1;for(var o=0;o<a.length;o++){var r=a[o];if(e[r]!==t[r])return!1}return!0}!function(){for(var e,t=function(){},a=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeline","timelineEnd","timeStamp","trace","warn"],n=a.length,o=window.console=window.console||{};n--;)o[e=a[n]]||(o[e]=t)}();const updateWeatherForecast={current:function(e){let{main:{temp:t,temp_max:a,temp_min:n,feels_like:o,humidity:r},dt:i,sys:{sunrise:l,sunset:s},wind:{speed:c},visibility:u,weather:[{description:d,icon:p,main:m}]}=e,h=new Date(1e3*i),g=new Date(1e3*l),f=new Date(1e3*s);i=`${h.getUTCHours().toString().padStart(2,"0")}:${h.getUTCMinutes().toString().padStart(2,"0")}`,l=`${g.getUTCHours().toString().padStart(2,"0")}:${g.getUTCMinutes().toString().padStart(2,"0")}`,s=`${f.getUTCHours().toString().padStart(2,"0")}:${f.getUTCMinutes().toString().padStart(2,"0")}`,t=Math.round(t),o=Math.round(o),u/=1e3,a=Math.round(a),n=Math.round(n),updateValue(".current > .card-content > .card-title > .description",d),updateValue(".current > .card-content > .temperature > .value",t),updateValue(".high > p > .value",a),updateValue(".low > p > .value",n),updateValue(".data_refresh > .updatable",i),updateValue(".sunrise > .value > .updatable",l),updateValue(".sunset > .value > .updatable",s),updateValue(".wind > .value > .updatable",c),updateValue(".feel > .value > .updatable",o),updateValue(".vision > .value > .updatable",u),updateValue(".humidity > .value > .updatable",r)},hourly:function(e){clearChildElement(".hourly > .hourly-wrapper"),e.slice(0,24).map((e,t)=>{let{temp:a,dt:n,weather:[{description:o,id:r,icon:i,main:l}]}=e,s=i.slice(-1);a=Math.round(a);let c=`${new Date(1e3*n).getUTCHours().toString().padStart(2,"0")}`,u="normal";0===t&&(c="Now",u="bold"),addChildElement(".hourly > .hourly-wrapper",`\n        <div class="hourly__content" id="${c}">\n          <div class=" hour">\n              <span class="updatable ${u}">${c}</span>\n          </div>\n          <div class=" icon"><i class="owf owf-${r}-${s}"></i></div>\n          <div class=" temp">\n              <span class="updatable">${a}&deg;</span>\n          </div>\n        </div>\n    `)})},daily:function(e){clearChildElement(".daily-forecast"),e.slice(1,8).map((e,t)=>{let{temp:a,dt:n,weather:[{description:o,id:r,icon:i,main:l}]}=e,s=i.slice(-1),{min:c,max:u}=a,d=new Date(1e3*n);addChildElement(".daily-forecast",`\n      <div class="col s12">\n        <div class="forecast row valign-wrapper">\n            <div class="col s4">\n                <span class="day">${days[d.getDay()]}</span>\n            </div>\n            <div class="col s4 center-align">\n                <span class="icon"><i class="owf owf-${r}-${s}"></i></span>\n            </div>\n            <div class="col s2 right-align">\n                <span class="high">${Math.round(u)}</span>\n            </div>\n            <div class="col s2 right-align">\n                <span class="low">${Math.round(c)}</span>\n            </div>\n        </div>\n      </div>\n    `)})},location:function(e){updateValue(".current > .card-content > .card-title > .location",e)}};let functionTimeout=null;function forecast_data(e){getJSON({url:e,callback:function(e){updateWeatherData(e)}})}function current_data(e){getJSON({url:e,callback:function(e){let t=e.name,a=e.sys.country;updateWeatherForecast.location(`${t}, ${a}`),updateWeatherForecast.current(e)}})}function checkIfHome(){objectsAreEquivalent(JSON.parse(localStorage.getItem("home")),MY_LOCATION)?setHome():removeHome()}function getWeatherData({lat:e,lng:t}){if(!e&&!t)return;let a=new URL(WEATHER_URL),n=new URL(CURRENT_WEATHER_URL),o=new URLSearchParams(a.search),r=new URLSearchParams(a.search);e&&t&&(o.append("lat",e),o.append("lon",t),r.append("lat",e),r.append("lon",t));let i=`${a.origin}${a.pathname}?${o.toString()}`,l=`${n.origin}${n.pathname}?${r.toString()}`;Promise.all([current_data(l),forecast_data(i)]),MY_LOCATION={...MY_LOCATION,lat:e,lng:t},checkIfHome()}function updateWeatherData(e){let{daily:t,hourly:a,timezone:n}=e;updateWeatherForecast.daily(t),updateWeatherForecast.hourly(a)}function setHome(){home.classList.contains("active")||home.classList.add("active"),localStorage.setItem("home",JSON.stringify(MY_LOCATION))}function removeHome(){home.classList.contains("active")&&home.classList.remove("active")}function filterBreakdown(){clearTimeout(functionTimeout),functionTimeout=setTimeout(()=>{let e=document.getElementById("breakdown_search");if(!e)return;let t=e.value;getJSONData(OPENCAGE_URL+t,function(e,t){if(null!==e)console.log("Opencage failed");else{let e=t.results[0].geometry;MY_LOCATION={...MY_LOCATION,...e},getWeatherData({...e})}})},500)}document.addEventListener("DOMContentLoaded",function(){getLocation()}),home.addEventListener("click",setHome);
